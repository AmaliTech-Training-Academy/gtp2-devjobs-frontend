name: Frontend Production CI/CD

on:
  push:
    branches:
      - main
      - testing
      - feature/devops

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Run Tests and Notify
    uses: ./.github/workflows/deploy-test-and-notify-for-dev.yml
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}

  build:
    name: Build & Push Production Docker Image
    needs: test
    uses: ./.github/workflows/deploy-build-and-push-for-prod.yml
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      ECR_REPO: ${{ secrets.ECR_REPO_PROD }}
      EXECUTION_ROLE_ARN: ${{ secrets.EXECUTION_ROLE_ARN }}
      NG_APP_BASE_URL_PROD: ${{ secrets.NG_APP_BASE_URL_PROD }}

  deploy:
    name: Deploy to ECS (Production)
    needs: build
    uses: ./.github/workflows/deploy-ecs-for-prod.yml
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      ECS_CLUSTER: ${{ secrets.ECS_CLUSTER_PROD }}
      ECS_SERVICE: ${{ secrets.ECS_SERVICE_PROD }}
      ECR_REPO: ${{ secrets.ECR_REPO_PROD }}
      EXECUTION_ROLE_ARN: ${{ secrets.EXECUTION_ROLE_ARN }}
      TASK_CPU: ${{ secrets.TASK_CPU }}
      TASK_MEMORY: ${{ secrets.TASK_MEMORY }}
      CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
      CONTAINER_PORT: ${{ secrets.CONTAINER_PORT }}
      TASK_FAMILY: ${{ secrets.TASK_FAMILY_PROD }}
      TASK_LOG_GROUP: ${{ secrets.TASK_LOG_GROUP_PROD }}
